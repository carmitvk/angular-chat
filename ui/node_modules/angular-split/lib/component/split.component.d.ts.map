{"version":3,"file":"split.component.d.ts","sources":["split.component.d.ts"],"names":[],"mappingssourcesContent":["import { ChangeDetectorRef, Renderer2, AfterViewInit, OnDestroy, ElementRef, NgZone, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IArea, IOutputData, IOutputAreaSizes } from '../interface';\nimport { SplitAreaDirective } from '../directive/split-area.directive';\n/**\n * angular-split\n *\n *\n *  PERCENT MODE ([unit]=\"'percent'\")\n *  ___________________________________________________________________________________________\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\n * |-------------------------------------------------------------------------------------------|\n * |       20                 30                 20                 15                 15      | <-- [size]=\"x\"\n * |               10px               10px               10px               10px               | <-- [gutterSize]=\"10\"\n * |calc(20% - 8px)    calc(30% - 12px)   calc(20% - 8px)    calc(15% - 6px)    calc(15% - 6px)| <-- CSS flex-basis property (with flex-grow&shrink at 0)\n * |     152px              228px              152px              114px              114px     | <-- el.getBoundingClientRect().width\n * |___________________________________________________________________________________________|\n *                                                                                 800px         <-- el.getBoundingClientRect().width\n *  flex-basis = calc( { area.size }% - { area.size/100 * nbGutter*gutterSize }px );\n *\n *\n *  PIXEL MODE ([unit]=\"'pixel'\")\n *  ___________________________________________________________________________________________\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\n * |-------------------------------------------------------------------------------------------|\n * |      100                250                 *                 150                100      | <-- [size]=\"y\"\n * |               10px               10px               10px               10px               | <-- [gutterSize]=\"10\"\n * |   0 0 100px          0 0 250px           1 1 auto          0 0 150px          0 0 100px   | <-- CSS flex property (flex-grow/flex-shrink/flex-basis)\n * |     100px              250px              200px              150px              100px     | <-- el.getBoundingClientRect().width\n * |___________________________________________________________________________________________|\n *                                                                                 800px         <-- el.getBoundingClientRect().width\n *\n */\nexport declare class SplitComponent implements AfterViewInit, OnDestroy {\n    private ngZone;\n    private elRef;\n    private cdRef;\n    private renderer;\n    set direction(v: 'horizontal' | 'vertical');\n    get direction(): 'horizontal' | 'vertical';\n    set unit(v: 'percent' | 'pixel');\n    get unit(): 'percent' | 'pixel';\n    set gutterSize(v: number | null);\n    get gutterSize(): number | null;\n    set gutterStep(v: number);\n    get gutterStep(): number;\n    set restrictMove(v: boolean);\n    get restrictMove(): boolean;\n    set useTransition(v: boolean);\n    get useTransition(): boolean;\n    set disabled(v: boolean);\n    get disabled(): boolean;\n    set dir(v: 'ltr' | 'rtl');\n    get dir(): 'ltr' | 'rtl';\n    set gutterDblClickDuration(v: number);\n    get gutterDblClickDuration(): number;\n    get transitionEnd(): Observable<IOutputAreaSizes>;\n    constructor(ngZone: NgZone, elRef: ElementRef, cdRef: ChangeDetectorRef, renderer: Renderer2);\n    private _direction;\n    private _unit;\n    private _gutterSize;\n    private _gutterStep;\n    private _restrictMove;\n    private _useTransition;\n    private _disabled;\n    private _dir;\n    private _gutterDblClickDuration;\n    dragStart: EventEmitter<IOutputData>;\n    dragEnd: EventEmitter<IOutputData>;\n    gutterClick: EventEmitter<IOutputData>;\n    gutterDblClick: EventEmitter<IOutputData>;\n    private transitionEndSubscriber;\n    private dragProgressSubject;\n    dragProgress$: Observable<IOutputData>;\n    private isDragging;\n    private isWaitingClear;\n    private isWaitingInitialMove;\n    private dragListeners;\n    private snapshot;\n    private startPoint;\n    private endPoint;\n    readonly displayedAreas: Array<IArea>;\n    private readonly hiddenAreas;\n    private gutterEls;\n    _clickTimeout: number | null;\n    ngAfterViewInit(): void;\n    private getNbGutters;\n    addArea(component: SplitAreaDirective): void;\n    removeArea(component: SplitAreaDirective): void;\n    updateArea(component: SplitAreaDirective, resetOrders: boolean, resetSizes: boolean): void;\n    showArea(component: SplitAreaDirective): void;\n    hideArea(comp: SplitAreaDirective): void;\n    getVisibleAreaSizes(): IOutputAreaSizes;\n    setVisibleAreaSizes(sizes: IOutputAreaSizes): boolean;\n    private build;\n    private refreshStyleSizes;\n    clickGutter(event: MouseEvent | TouchEvent, gutterNum: number): void;\n    startDragging(event: MouseEvent | TouchEvent, gutterOrder: number, gutterNum: number): void;\n    private dragEvent;\n    private stopDragging;\n    notify(type: 'start' | 'progress' | 'end' | 'click' | 'dblclick' | 'transitionEnd', gutterNum: number): void;\n    ngOnDestroy(): void;\n    collapseArea(comp: SplitAreaDirective, newSize: number, gutter: 'left' | 'right'): void;\n    expandArea(comp: SplitAreaDirective): void;\n}\n"]}